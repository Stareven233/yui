2022-03-21 11:06:45 test.py[line:19] INFO DevConfig(DATASET_DIR='D:/A日常/大学/毕业设计/dataset/maestro-v3.0.0/', WORKSPACE='D:/A日常/大学/毕业设计/code/yui/', TRAIN_STEPS=200, DEVICE='cpu', RANDOM_SEED=233, MAX_INPUTS_LENGTH=512, MAX_TARGETS_LENGTH=1024, MAX_SEGMENT_LENGTH=2000, SAMPLE_RATE=16000, FRAME_SIZE=128, HOP_WIDTH=128, NUM_MEL_BINS=512, FFT_SIZE=2048, MEL_LO_HZ=20.0, MEL_HI_HZ=8000.0, ENCODED_EOS_ID=1, ENCODED_UNK_ID=2, EXTRA_IDS=100)
2022-03-21 11:06:46 datasets.py[line:41] INFO get meta=(0, 0.0) of audio='2015/MIDI-Unprocessed_R1_D1-1-8_mid--AUDIO-from_mp3_06_R1_2015_wav--3.wav'
2022-03-21 11:06:46 datasets.py[line:52] INFO audio.shape=(65536,)
2022-03-21 11:06:46 preprocessors.py[line:172] INFO Got audio for ns.id='(0, 0.0)'::ns.filename='' with length 65536
2022-03-21 11:06:47 preprocessors.py[line:130] INFO Padded 65536 samples to multiple of 128
2022-03-21 11:06:47 preprocessors.py[line:135] INFO librosa.util.frame: frames.shape=(512, 128)
2022-03-21 11:06:47 preprocessors.py[line:141] INFO Encoded 65536 samples to 512 frames, 128 samples each
2022-03-21 11:06:47 preprocessors.py[line:212] INFO trim featrue: start=0, end=512, start_time=0.0, frame_times[start]=0.0
2022-03-21 11:06:47 preprocessors.py[line:422] INFO features["targets"].shape=(8290,)
2022-03-21 11:06:47 preprocessors.py[line:424] INFO features["targets"].shape=(667,), target_start_idx=0 target_end_idx=667
2022-03-21 11:06:47 preprocessors.py[line:464] INFO targets, features[key].shape=(667,)
2022-03-21 11:06:47 preprocessors.py[line:466] INFO targets, features[key].shape=(581,)
2022-03-21 11:06:47 preprocessors.py[line:490] INFO len(state_change_event_ranges)=2, state_change_event_ranges=[(1129, 1256), (1258, 1385)]
2022-03-21 11:06:47 preprocessors.py[line:491] INFO 
before RLE, features[key].shape=(581,), features[key]=array(
[        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1, 1225,
       1049, 1220, 1061,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1, 1228, 1037,    1, 1222, 1025,    1,    1,    1,
          1,    1,    1,    1, 1129, 1025,    1,    
          
          1, 1129, 1049,    
          
          1,
       1129, 1037,    1,    1, 1129, 1061,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1, 1206, 1061,    1,    1,
          1,    1,    1,    1,    1,    1,    1, 1205, 1068,    1,    1,
          1,    1, 1129, 1061,    1,    1,    1, 1208, 1071,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1, 1230, 1077,    1, 1227, 1085,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1, 1129, 1085,    1,
          1,    1,    1,    1,    1,    1,    1,    1, 1218, 1089, 1222,
       1097,    1,    1,    1,    1,    1,    1,    1,    1, 1129, 1089,
          1,    1,    1,    1,    1,    1,    1, 1216, 1095,    1,    1,
          1, 1129, 1097,    1,    1,    1,    1, 1209, 1091,    1,    1,
          1,    1,    1,    1, 1129, 1095,    1,    1,    1,    1, 1163,
       1092,    1, 1207, 1089,    1, 1129, 1091,    1, 1188, 1090,    1,
       1129, 1092,    1,    1, 1129, 1090,    1, 1129, 1089, 1208, 1085,
          1,    1,    1, 1129, 1077,    1,    1, 1129, 1071, 1129, 1068,
          1, 1129, 1085,    1,    1,    1,    1, 1214, 1083,    1,    1,
          1,    1,    1,    1, 1210, 1081,    1,    1,    1,    1,    1,
       1129, 1083, 1218, 1080,    1, 1129, 1081,    1,    1, 1220, 1076,
          1,    1, 1129, 1080,    1,    1,    1,    1,    1,    1, 1129,
       1076,    1, 1220, 1073,    1,    1,    1, 1129, 1073,    1,    1,
          1,    1,    1, 1186, 1072,    1, 1215, 1070,    1,    1, 1129,
       1072,    1,    1,    1,    1, 1201, 1068,    1,    1,    1,    1,
       1129, 1070,    1,    1,    1, 1221, 1065,    1,    1,    1, 1129,
       1068,    1,    1,    1, 1129, 1065,    1, 1213, 1061,    1,    1,
          1,    1,    1,    1, 1129, 1061,    1,    1,    1, 1218, 1059,
          1,    1,    1,    1,    1,    1,    1,    1, 1204, 1056,    1,
          1,    1,    1, 1129, 1059,    1,    1, 1217, 1053,    1,    1,
          1, 1129, 1056,    1,    1,    1, 1129, 1053,    1, 1206, 1049,
          1,    1,    1,    1,    1, 1129, 1049,    1,    1,    1,    1,
          1, 1207, 1047,    1,    1,    1,    1,    1,    1,    1,    1,
       1129, 1047,    1, 1199, 1044,    1,    1,    1,    1,    1,    1,
          1,    1, 1129, 1044, 1192, 1051,    1,    1,    1,    1, 1190,
       1049,    1, 1181, 1041,    1, 1129, 1051, 1192, 1045,    1,    1,
          1, 1129, 1041,    1,    1, 1185, 1047,    1,    1, 1129, 1049,
          1,    1, 1129, 1045,    1,    1,    1, 1129, 1047,    1,    1,
       1192, 1046,    1,    1, 1187, 1042,    1,    1,    1,    1, 1129,
       1042,    1,    1, 1129, 1046,    1, 1183, 1053,    1,    1,    1,
          1,    1, 1180, 1047,    1, 1184, 1051,    1, 1129, 1053,    1,
       1198, 1043,    1,    1,    1,    1, 1189, 1049,    1
])

2022-03-21 11:06:47 preprocessors.py[line:532] INFO 
after RLE, features[key].shape=(237,), features[key]=array(
       (shift, velocity, pitch)
       1129: velocity==0
       1001: pitch==0

[       87, 1225, 1049, 1220, 1061,   98, 1228, 1037,   99, 1222, 1025,
        106, 1129, 1025,  
        
        108, 1049,  (这个1049应该是结束音符，前面少了个1129)
        
        109, 1037,  111, 1061,  156, 1206,
       1061,  165, 1205, 1068,  169, 1129, 1061,  172, 1208, 1071,  187,
       1230, 1077,  188, 1227, 1085,  200, 1129, 1085,  209, 1218, 1089,
       1222, 1097,  217, 1129, 1089,  224, 1216, 1095,  227, 1129, 1097,
        231, 1209, 1091,  237, 1129, 1095,  241, 1163, 1092,  242, 1207,
       1089,  243, 1129, 1091,  244, 1188, 1090,  245, 1129, 1092,  247,
       1090,  248, 1089, 1208, 1085,  251, 1129, 1077,  253, 1071, 1068,
        254, 1085,  258, 1214, 1083,  264, 1210, 1081,  269, 1129, 1083,
       1218, 1080,  270, 1129, 1081,  272, 1220, 1076,  274, 1129, 1080,
        280, 1076,  281, 1220, 1073,  284, 1129, 1073,  289, 1186, 1072,
        290, 1215, 1070,  292, 1129, 1072,  296, 1201, 1068,  300, 1129,
       1070,  303, 1221, 1065,  306, 1129, 1068,  309, 1065,  310, 1213,
       1061,  316, 1129, 1061,  319, 1218, 1059,  327, 1204, 1056,  331,
       1129, 1059,  333, 1217, 1053,  336, 1129, 1056,  339, 1053,  340,
       1206, 1049,  345, 1129, 1049,  350, 1207, 1047,  358, 1129, 1047,
        359, 1199, 1044,  367, 1129, 1044, 1192, 1051,  371, 1190, 1049,
        372, 1181, 1041,  373, 1129, 1051, 1192, 1045,  376, 1129, 1041,
        378, 1185, 1047,  380, 1129, 1049,  382, 1045,  385, 1047,  387,
       1192, 1046,  389, 1187, 1042,  393, 1129, 1042,  395, 1046,  396,
       1183, 1053,  401, 1180, 1047,  402, 1184, 1051,  403, 1129, 1053,
        404, 1198, 1043,  408, 1189, 1049
])

2022-03-21 11:06:47 preprocessors.py[line:542] INFO samples.shape=(65536,)
2022-03-21 11:06:47 preprocessors.py[line:571] INFO log_mel_spec.shape=(512, 512)
2022-03-21 11:06:47 preprocessors.py[line:592] INFO before tokenize, v[:20]=array([  87, 1225, 1049, 1220, 1061,   98, 1228, 1037,   99, 1222, 1025,
        106, 1129, 1025,  108, 1049,  109, 1037,  111, 1061]), [ 395 1046  396 1183 1053  401 1180 1047  402 1184 1051  403 1129 1053
  404 1198 1043  408 1189 1049]
2022-03-21 11:06:47 preprocessors.py[line:600] INFO after tokenize, v[:20]=array([  90, 1228, 1052, 1223, 1064,  101, 1231, 1040,  102, 1225, 1028,
        109, 1132, 1028,  111, 1052,  112, 1040,  114, 1064]), [1049  399 1186 1056  404 1183 1050  405 1187 1054  406 1132 1056  407
 1201 1046  411 1192 1052    1]
2022-03-21 11:06:47 test.py[line:104] INFO features={'encoder_input_tokens': [array([[-31.729744 , -23.949516 , -18.178795 , ..., -49.176636 ,
        -49.176636 , -49.176636 ],
       [-30.94574  , -23.981972 , -18.405993 , ..., -49.176636 ,
        -49.176636 , -49.176636 ],
       [-29.291832 , -24.462532 , -18.956625 , ..., -49.176636 ,
        -49.176636 , -49.176636 ],
       ...,
       [-10.312356 ,  -8.543402 ,  -9.983448 , ..., -49.176636 ,
        -49.176636 , -49.176636 ],
       [ -8.213343 ,  -6.886179 ,  -8.130039 , ..., -49.176636 ,
        -49.176636 , -49.176636 ],
       [ -7.072014 ,  -5.9113865,  -7.071488 , ..., -49.176636 ,
        -49.176636 , -49.176636 ]], dtype=float32)], 'decoder_target_tokens': [array([  90, 1228, 1052, ...,    0,    0,    0])], 'decoder_input_tokens': [array([   0,   90, 1228, ...,    0,    0,    0])], 'id': ['(0, 0.0)']}
